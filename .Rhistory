ci_low = matrixStats::rowQuantiles(x, probs = probs[1], na.rm = TRUE) %>% unname,
ci_up  = matrixStats::rowQuantiles(x, probs = probs[2], na.rm = TRUE) %>% unname)
lines_df <- x %>%
as.data.frame %>%
tibble::rownames_to_column(var = "spl_size") %>%
data.table::melt(id.vars = "spl_size",
variable.name = "simulation_id") %>%
dplyr::mutate(spl_size = as.integer(spl_size),
simulation_id = as.integer(simulation_id))
return(list(stats_df = stats_df,
lines_df = lines_df))
} else if (cls == "array") {
means <- x %>%
apply(MARGIN = 1:2, FUN = mean, na.rm = TRUE) %>%
as.data.frame %>%
tibble::rownames_to_column(var = "sp") %>%
data.table::melt(id.vars = "sp", variable.name = "spl_size", value.name = "mean")
quantiles_low <- x %>%
apply(MARGIN = 1:2, FUN = quantile, na.rm = TRUE, probs = probs[1]) %>%
as.data.frame %>%
tibble::rownames_to_column(var = "sp") %>%
data.table::melt(id.vars = "sp", variable.name = "spl_size", value.name = "ci_low")
quantiles_up <- x %>%
apply(MARGIN = 1:2, FUN = quantile, na.rm = TRUE, probs = probs[2]) %>%
as.data.frame %>%
tibble::rownames_to_column(var = "sp") %>%
data.table::melt(id.vars = "sp", variable.name = "spl_size", value.name = "ci_up")
stats_df <- list(means, quantiles_low, quantiles_up) %>%
purrr::reduce(dplyr::inner_join, by = c("sp", "spl_size")) %>%
dplyr::mutate(spl_size = as.integer(as.character(spl_size)))
lines_df <- x %>%
apply(MARGIN = 3, FUN = as.data.frame) %>%
lapply(rownames_to_column, var = "sp") %>%
data.table::rbindlist(idcol = "simulation_id") %>%
data.table::melt(id.vars = c("sp", "simulation_id"), variable.name = "spl_size") %>%
dplyr::mutate(spl_size = as.integer(as.character(spl_size)))
return(list(stats_df = stats_df,
lines_df = lines_df))
}
}
get_stats_multi <- function(webs_stats){
metric_names <- names(webs_stats[[1]])
n <- length(metric_names)
metrics_stats <- vector(mode = "list", length = n)
names(metrics_stats) <- metric_names
for (i in 1:n){
temp <- webs_stats %>%
lapply("[[", metric_names[i])
temp_stats_df <- temp %>%
lapply("[[", "stats_df") %>%
data.table::rbindlist(idcol = "web") %>%
data.table::setDF()
temp_lines_df <- temp %>%
lapply("[[", "lines_df") %>%
data.table::rbindlist(idcol = "web") %>%
data.table::setDF()
metrics_stats[[i]] <- list(stats_df = temp_stats_df,
lines_df = temp_lines_df)
rm(temp, temp_stats_df, temp_lines_df)
}
return(metrics_stats)
}
gg_specieslevel_compare_webs(lst2, sp_lower = species)
rm(list = ls(all.names = TRUE))
.rs.restartR()
devtools::document()
devtools::check()
library(filesstrings)
file.move("../bootstrapnet_0.0.0.9000.tar.gz", "_not_include", overwrite = TRUE)
install.packages("_not_include/bootstrapnet_0.0.0.9000.tar.gz",
repos = NULL,
type = "source")
library(bootstrapnet)
library(magrittr)
start <- 10
step = 10
n_boot <- 10
n_cpu <- 3
seed <- 321
col_lower = "lower"
col_higher = "higher"
# level = "lower"
level = "both"
index = "betweenness"
set.seed(321)
Safariland_1 <- Safariland[, sort(sample.int(ncol(Safariland), 10))]
set.seed(123)
Safariland_2 <- Safariland[, sort(sample.int(ncol(Safariland), 10))]
lst2 <- list(s1 = Safariland_1, s2 = Safariland_2) %>%
lapply(web_matrix_to_df) %>%
boot_specieslevel(col_lower = col_lower, # column name for plants
col_higher = col_higher, # column name for insects
index = index,
level = level,
start = start,
step = step,
n_boot = n_boot,
n_cpu = n_cpu) %>%
get_stats_multi()
species <- "Alstroemeria aurea"
size_boot_lines = 0.1
alpha_boot_lines = 0.1
size_ci = 1
linetype_ci = 2
size_mean = 1
linetype_mean = 1
gg_specieslevel_compare_webs(lst2, sp_lower = species)
gg_specieslevel_compare_webs(lst2, sp_lower = species, sp_higher = species)
lst_both_levels <- list(s1 = Safariland_1, s2 = Safariland_2) %>%
lapply(web_matrix_to_df) %>%
boot_specieslevel(col_lower = col_lower, # column name for plants
col_higher = col_higher, # column name for insects
index = index,
level = "both",
start = start,
step = step,
n_boot = n_boot,
n_cpu = n_cpu)
species <- c("Alstroemeria aurea", "Aristotelia chilensis")
gg_specieslevel_web_by_web(lst_both_levels, sp_lower = species)
warnings()
lst <- list(s1 = Safariland_1, s2 = Safariland_2) %>%
lapply(web_matrix_to_df) %>%
boot_networklevel(col_lower = col_lower, # column name for plants
col_higher = col_higher, # column name for insects
index = index,
level = level,
start = start,
step = step,
n_boot = n_boot,
n_cpu = n_cpu)
View(lst)
lst[["V1"]][["stats_df"]]
View(lst)
gg_networklevel(lst)
lst <- list(s1 = Safariland_1, s2 = Safariland_2) %>%
lapply(web_matrix_to_df)
webs_stats <- vector(mode = "list", length = length(lst))
names(webs_stats) <- names(lst)
for (i in 1:length(webs_stats)){
webs_stats[[i]] <- lst[[i]] %>%
boot_networklevel_n(col_lower = col_lower,
col_higher = col_higher,
index = index,
level = level,
start = start,
step = step,
n_boot = n_boot,
n_cpu = n_cpu) %>%
lapply(FUN = get_stats_single, probs = probs)
}
probs = c(0.025, 0.975)
webs_stats <- vector(mode = "list", length = length(lst))
names(webs_stats) <- names(lst)
for (i in 1:length(webs_stats)){
webs_stats[[i]] <- lst[[i]] %>%
boot_networklevel_n(col_lower = col_lower,
col_higher = col_higher,
index = index,
level = level,
start = start,
step = step,
n_boot = n_boot,
n_cpu = n_cpu) %>%
lapply(FUN = get_stats_single, probs = probs)
}
View(webs_stats)
i=1
lst[[i]]
test <- lst[[i]] %>%
boot_networklevel_n(col_lower = col_lower,
col_higher = col_higher,
index = index,
level = level,
start = start,
step = step,
n_boot = n_boot,
n_cpu = n_cpu)
View(test)
test[["V1"]]
index
start <- 10
step = 10
n_boot <- 10
n_cpu <- 3
seed <- 321
col_lower = "lower"
col_higher = "higher"
level = "both"
# index = "nestedness"
index = "niche overlap"
# index = "NODF"
probs = c(0.025, 0.975)
?networklevel
Safariland_sort <- Safariland %>%
.[, order(colnames(.))] %>%
.[order(rownames(.)), ]
set.seed(42)
networklevel(Safariland_sort, index = "betweenness", level = "both")
start <- 10
step = 10
n_boot <- 10
n_cpu <- 3
seed <- 321
col_lower = "lower"
col_higher = "higher"
level = "both"
# index = "nestedness"
index = "niche overlap"
# index = "NODF"
probs = c(0.025, 0.975)
lst <- list(s1 = Safariland_1, s2 = Safariland_2) %>%
lapply(web_matrix_to_df) %>%
boot_networklevel(col_lower = col_lower, # column name for plants
col_higher = col_higher, # column name for insects
index = index,
level = level,
start = start,
step = step,
n_boot = n_boot,
n_cpu = n_cpu)
gg_networklevel(lst)
View(lst)
index = "niche overlap"
lst <- list(s1 = Safariland_1, s2 = Safariland_2) %>%
lapply(web_matrix_to_df) %>%
boot_networklevel(col_lower = col_lower, # column name for plants
col_higher = col_higher, # column name for insects
index = index,
level = level,
start = start,
step = step,
n_boot = n_boot,
n_cpu = n_cpu)
View(lst)
networklevel(Safariland, index = "generality", level = "both")
"generality"
View(lst)
lst <- list(s1 = Safariland_1, s2 = Safariland_2) %>%
lapply(web_matrix_to_df) %>%
boot_networklevel(col_lower = col_lower, # column name for plants
col_higher = col_higher, # column name for insects
index = index,
level = level,
start = start,
step = step,
n_boot = n_boot,
n_cpu = n_cpu)
View(lst)
level
lst[["niche.overlap.HL"]][["stats_df"]]
index
index = "generality"
lst <- list(s1 = Safariland_1, s2 = Safariland_2) %>%
lapply(web_matrix_to_df) %>%
boot_networklevel(col_lower = col_lower, # column name for plants
col_higher = col_higher, # column name for insects
index = index,
level = level,
start = start,
step = step,
n_boot = n_boot,
n_cpu = n_cpu)
View(lst)
.rs.restartR()
library(bootstrapnet)
library(bipartite)
library(magrittr)
data(Safariland)
set.seed(321)
Safariland_1 <- Safariland[, sort(sample.int(ncol(Safariland), 10))]
set.seed(123)
Safariland_2 <- Safariland[, sort(sample.int(ncol(Safariland), 10))]
set.seed(321)
Safariland_1 <- Safariland[, sort(sample.int(ncol(Safariland), 10))]
set.seed(123)
Safariland_2 <- Safariland[, sort(sample.int(ncol(Safariland), 10))]
lst <- list(s1 = Safariland_1, s2 = Safariland_2) %>%
lapply(web_matrix_to_df) %>%
boot_networklevel(col_lower = col_lower, # column name for plants
col_higher = col_higher, # column name for insects
index = "nestedness",
level = "both",
start = 10,
step = 10,
n_boot = 10,
n_cpu = 2)
gg_networklevel(lst)
lst <- list(s1 = Safariland_1, s2 = Safariland_2) %>%
lapply(web_matrix_to_df) %>%
boot_networklevel(col_lower = "lower", # column name for plants
col_higher = "higher", # column name for insects
index = "nestedness",
level = "both",
start = 10,
step = 10,
n_boot = 10,
n_cpu = 2)
gg_networklevel(lst)
lst <- list(s1 = Safariland_1, s2 = Safariland_2) %>%
lapply(web_matrix_to_df) %>%
boot_networklevel(col_lower = "lower", # column name for plants
col_higher = "higher", # column name for insects
index = "nestedness",
level = "both",
start = 10,
step = 10,
n_boot = 20,
n_cpu = 2)
gg_networklevel(lst)
start <- 10
step = 10
n_boot <- 10
n_cpu <- 3
seed <- 321
col_lower = "lower"
col_higher = "higher"
# level = "lower"
level = "both"
index = "betweenness"
set.seed(321)
Safariland_1 <- Safariland[, sort(sample.int(ncol(Safariland), 10))]
set.seed(123)
Safariland_2 <- Safariland[, sort(sample.int(ncol(Safariland), 10))]
lst2 <- list(s1 = Safariland_1, s2 = Safariland_2) %>%
lapply(web_matrix_to_df) %>%
boot_specieslevel(col_lower = col_lower, # column name for plants
col_higher = col_higher, # column name for insects
index = index,
level = level,
start = start,
step = step,
n_boot = n_boot,
n_cpu = n_cpu)
View(lst2)
set.seed(321)
Safariland_1 <- Safariland[, sort(sample.int(ncol(Safariland), 10))]
set.seed(123)
Safariland_2 <- Safariland[, sort(sample.int(ncol(Safariland), 10))]
lst <- list(s1 = Safariland_1, s2 = Safariland_2) %>%
lapply(web_matrix_to_df) %>%
boot_specieslevel(col_lower = "lower", # column name for plants
col_higher = "higher", # column name for insects
index = "betweenness",
level = "both",
start = 10,
step = 10,
n_boot = 10,
n_cpu = 2)
Safariland_2
Safariland_1
lst %>%
get_stats_multi() %>%
gg_specieslevel_compare_webs(sp_lower = "Alstroemeria aurea",
sp_higher = "Ichneumonidae4")
get_stats_multi <- function(webs_stats){
metric_names <- names(webs_stats[[1]])
n <- length(metric_names)
metrics_stats <- vector(mode = "list", length = n)
names(metrics_stats) <- metric_names
for (i in 1:n){
temp <- webs_stats %>%
lapply("[[", metric_names[i])
temp_stats_df <- temp %>%
lapply("[[", "stats_df") %>%
data.table::rbindlist(idcol = "web") %>%
data.table::setDF()
temp_lines_df <- temp %>%
lapply("[[", "lines_df") %>%
data.table::rbindlist(idcol = "web") %>%
data.table::setDF()
metrics_stats[[i]] <- list(stats_df = temp_stats_df,
lines_df = temp_lines_df)
rm(temp, temp_stats_df, temp_lines_df)
}
return(metrics_stats)
}
lst %>%
get_stats_multi() %>%
gg_specieslevel_compare_webs(sp_lower = "Alstroemeria aurea",
sp_higher = "Ichneumonidae4")
lst %>%
get_stats_multi()
test <- lst %>%
get_stats_multi()
View(test)
lst %>%
get_stats_multi() %>%
gg_specieslevel_compare_webs(sp_lower = "Alstroemeria aurea")
lst %>%
get_stats_multi() %>%
# gg_specieslevel_compare_webs(sp_lower = "Alstroemeria aurea")
gg_specieslevel_compare_webs(sp_lower = "Alstroemeria aurea",
sp_higher = "Ichneumonidae4")
lst %>%
get_stats_multi() %>%
# gg_specieslevel_compare_webs(sp_lower = "Alstroemeria aurea")
gg_specieslevel_compare_webs(sp_lower = "Alstroemeria aurea",
sp_higher = "Ichneumonidae4")
Safariland_2
lst %>%
get_stats_multi() %>%
# gg_specieslevel_compare_webs(sp_lower = "Alstroemeria aurea")
gg_specieslevel_compare_webs(sp_lower = "Alstroemeria aurea",
sp_higher = "Ruizantheda mutabilis")
set.seed(321)
Safariland_1 <- Safariland[, sort(sample.int(ncol(Safariland), 15))]
set.seed(123)
Safariland_2 <- Safariland[, sort(sample.int(ncol(Safariland), 15))]
lst <- list(s1 = Safariland_1, s2 = Safariland_2) %>%
lapply(web_matrix_to_df) %>%
boot_specieslevel(col_lower = "lower", # column name for plants
col_higher = "higher", # column name for insects
index = "betweenness",
level = "both",
start = 10,
step = 10,
n_boot = 10,
n_cpu = 2)
set.seed(321)
Safariland_1 <- Safariland[, sort(sample.int(ncol(Safariland), 20))]
set.seed(123)
Safariland_2 <- Safariland[, sort(sample.int(ncol(Safariland), 20))]
lst <- list(s1 = Safariland_1, s2 = Safariland_2) %>%
lapply(web_matrix_to_df) %>%
boot_specieslevel(col_lower = "lower", # column name for plants
col_higher = "higher", # column name for insects
index = "betweenness",
level = "both",
start = 50,
step = 50,
n_boot = 10,
n_cpu = 3)
lst %>%
get_stats_multi() %>%
# gg_specieslevel_compare_webs(sp_lower = "Alstroemeria aurea")
gg_specieslevel_compare_webs(sp_lower = "Alstroemeria aurea",
sp_higher = "Ruizantheda mutabilis")
lst <- list(s1 = Safariland_1, s2 = Safariland_2) %>%
lapply(web_matrix_to_df) %>%
boot_specieslevel(col_lower = "lower", # column name for plants
col_higher = "higher", # column name for insects
index = "betweenness",
level = "both",
start = 50,
step = 20,
n_boot = 10,
n_cpu = 3)
lst %>%
get_stats_multi() %>%
# gg_specieslevel_compare_webs(sp_lower = "Alstroemeria aurea")
gg_specieslevel_compare_webs(sp_lower = "Alstroemeria aurea",
sp_higher = "Ruizantheda mutabilis")
Safariland_2
lst %>%
get_stats_multi() %>%
# gg_specieslevel_compare_webs(sp_lower = "Alstroemeria aurea")
gg_specieslevel_compare_webs(sp_lower = "Alstroemeria aurea",
sp_higher = "Ichneumonidae4")
intersect(colnames(Safariland_1), colnames(Safariland_2))
lst %>%
get_stats_multi() %>%
# gg_specieslevel_compare_webs(sp_lower = "Alstroemeria aurea")
gg_specieslevel_compare_webs(sp_lower = "Alstroemeria aurea",
sp_higher = "Trichophthalma amoena")
lst %>%
get_stats_multi() %>%
# gg_specieslevel_compare_webs(sp_lower = "Alstroemeria aurea")
gg_specieslevel_compare_webs(sp_lower = "Alstroemeria aurea",
sp_higher = "Allograpta.Toxomerus")
lst %>% gg_specieslevel_web_by_web(sp_lower = c("Alstroemeria aurea", "Aristotelia chilensis"),
sp_upper = c("Trichophthalma amoena", "Allograpta.Toxomerus"))
lst %>% gg_specieslevel_web_by_web(sp_lower = c("Alstroemeria aurea", "Aristotelia chilensis"),
sp_higher = c("Trichophthalma amoena", "Allograpta.Toxomerus"))
lst %>% gg_specieslevel_web_by_web(sp_lower = c("Alstroemeria aurea", "Aristotelia chilensis"),
sp_higher = c("Trichophthalma amoena", "Corynura prothysteres"))
intersect(colnames(Safariland_1), colnames(Safariland_2))
lst %>% gg_specieslevel_web_by_web(sp_lower = c("Alstroemeria aurea", "Aristotelia chilensis"),
sp_higher = c("Trichophthalma amoena", "Phthiria"))
intersect(colnames(Safariland_1), colnames(Safariland_2))
lst %>% gg_specieslevel_web_by_web(sp_lower = c("Alstroemeria aurea", "Aristotelia chilensis"),
sp_higher = c("Allograpta.Toxomerus", "Sapromyza.Minetti"))
intersect(colnames(Safariland_1), colnames(Safariland_2))
lst %>%
gg_specieslevel_web_by_web(sp_lower = c("Alstroemeria aurea", "Aristotelia chilensis"),
sp_higher = c("Allograpta.Toxomerus", "Sapromyza.Minettia"))
lst %>%
gg_specieslevel_web_by_web(sp_lower = c("Alstroemeria aurea", "Aristotelia chilensis"),
sp_higher = c("Allograpta.Toxomerus", "Nitidulidae"))
intersect(colnames(Safariland_1), colnames(Safariland_2))
lst %>%
gg_specieslevel_web_by_web(sp_lower = c("Alstroemeria aurea", "Aristotelia chilensis"),
sp_higher = c("Allograpta.Toxomerus", "Ichneumonidae4"))
intersect(colnames(Safariland_1), colnames(Safariland_2))
lst %>%
gg_specieslevel_web_by_web(sp_lower = c("Alstroemeria aurea", "Aristotelia chilensis"),
sp_higher = c("Allograpta.Toxomerus", "Braconidae3"))
intersect(colnames(Safariland_1), colnames(Safariland_2))
lst %>%
gg_specieslevel_web_by_web(sp_lower = c("Alstroemeria aurea", "Aristotelia chilensis"),
sp_higher = c("Allograpta.Toxomerus", "Chalepogenus caeruleus"))
intersect(colnames(Safariland_1), colnames(Safariland_2))
lst %>%
gg_specieslevel_web_by_web(sp_lower = c("Alstroemeria aurea", "Aristotelia chilensis"),
sp_higher = c("Allograpta.Toxomerus", "Vespula germanica"))
lst %>%
gg_specieslevel_web_by_web(sp_lower = c("Alstroemeria aurea", "Aristotelia chilensis"))
intersect(colnames(Safariland_1), colnames(Safariland_2))
lst %>%
gg_specieslevel_web_by_web(sp_lower = c("Alstroemeria aurea", "Aristotelia chilensis"),
sp_higher = c("Allograpta.Toxomerus", "Phthiria1"))
intersect(colnames(Safariland_1), colnames(Safariland_2))
